# simple config file for a simulation with bees, casus, playground


# definition for the deployment tools
PRJ_FILE   : demo.assisi
DEPLOY_DIR : demo_deploy


# we may need to propogate IP addresses/ports to manage multi-simulator 
# or multi-site experiments 
SIM_HOST_IP : tcp://localhost


logbase : /tmp/demo_exec_progs


# simulation timing
calib_timeout : 3.0
simulation_runtime_mins : 0.1

# setup specifics [this is too strong an assumption - don't like it here]
n_bees : 9

# tools for each of the stages in a simulation (if commented, or None, stage is skipped)
#tool_spawn_agents : "spawn_agents.py"
tool_exec_agents  : "run_multiagent"
#spawn_wall_tool            : "python arenas.py"
#tool_spawn_agents          : "python scripts/spawn_bees_top.py"
#tool_launch_agent_handlers : "python scripts/launch_bee_behaviours.py"


agents:
    pop98:
        size : 5
        behav_script : "basic_bee_fwd.py"
        #behav_script : "../../examples/beeconf/basic_bee.py"
        wall_spawner : "python spawn_arenas.py -x -4.5 -y 9.0"
        spawner      : "python spawn_agents.py"

    
    # if the default `run_multiagent.py` script is being used to manage,
    # each population should be defined with the following
    #   label
    #   behav_script
    #   size
    #   wall_spawner
    #
    # label         -- thus becomes a prefix for all members
    # behav_script  -- same for all members in a popln
    #   although the manager can handle heterogeneity, it is hard to control
    #   the generation of the agents with heterogeneous scripts from here
    #   thus, each population should have their own behav_script defined here
    #   though several poplns could make up a specific popln
    # size          -- population size
    # wall_spawner  -- the walls define the valid area to spawn within a given 
    #   arena.  Thus, it makes more sense to have these definitions co-managed
    #   


# steps to setup the bees
# 1. wall_spawner  -> write valid_area to label-valid_area.csv
# 2. agent_spawner -> read label-valid_area.csv, 
#                     use behav_script, size, 
#                     write agent_listing.csv
# 3. agent behav   -> read agent_listing.csv, exec.
# all 1,2 should be done before 3 is started. Also, 1,2 are blocking while 3 nonblokcing.


